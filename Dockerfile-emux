# Dockerfile for EMUX-Docker
# by Saumil Shah

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# EMUX by Saumil Shah
# https://emux.exploitlab.net/

#FROM alpine:latest
FROM alpine:3.21.3

# Install packages
RUN apk update
RUN apk add \
    qemu-system-arm \
    qemu-system-mips \
    qemu-system-mipsel \
    qemu-system-aarch64 \
	bash sudo pv tar dialog curl wget tmux git \
	iptables-legacy iptables \
	vim nano asciinema \
	coreutils util-linux \
	iputils iproute2 \
	build-base \
	python3 python3-dev py3-pip \
	openssh-client openssl openssl-dev \
	libffi-dev \
	xz-dev \
	openrc \
	gdb-multiarch \
	nfs-utils \
	dnsmasq \
	tinyproxy \
	socat \
	netcat-openbsd \
	busybox-extras \
	cmake \
	--no-cache

# Install Python packages
ENV PIP_BREAK_SYSTEM_PACKAGES=1
RUN pip install --upgrade pip
RUN pip install wheel
RUN pip install cstruct
RUN pip install ropper

# Uncomment if you want to install pwntools
# NOTE: *** It will take a very long time to build ***
#       *** but it works ***
#
#RUN pip install pwntools

# Install packages/repos from Github
WORKDIR /tmp

# Copy network tunnel startup script, NFS exports, tinyproxy config and tinyproxy startup script
COPY files/etc/local.d/* /etc/local.d/
COPY files/etc/exports /etc/exports
COPY files/etc/tinyproxy/* /etc/tinyproxy/

# Create an r0 user for all userland work
RUN adduser --disabled-password --gecos "" r0
RUN echo 'r0 ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

# Set r0's shell to bash
RUN sed -i 's!/bin/ash!/bin/bash!g' /etc/passwd

# Set up the home directory of r0 user
WORKDIR /home/r0

# Add bashrc, ssh configs, etc
COPY --chown=r0 files/home/r0/bashrc .bashrc
COPY --chown=r0 files/home/r0/bash_profile .bash_profile
COPY --chown=r0 files/home/r0/tmux.conf .tmux.conf
COPY --chown=r0 files/home/r0/ssh .ssh
COPY --chown=r0 files/home/r0/dircolors .dircolors
COPY --chown=r0 files/home/r0/gdbinit .gdbinit
COPY --chown=r0 files/home/r0/gef.rc .gef.rc
COPY --chown=r0 files/home/r0/gef .gef
COPY --chown=r0 files/home/r0/config .config

COPY --chown=root files/home/r0/bashrc /root/.bashrc
COPY --chown=root files/home/r0/bash_profile /root/.bash_profile
COPY --chown=root files/home/r0/tmux.conf /root/.tmux.conf
COPY --chown=root files/home/r0/ssh /root/.ssh
COPY --chown=root files/home/r0/dircolors /root/.dircolors

RUN chmod 600 /home/r0/.ssh/id_rsa /home/r0/.ssh/config
RUN chmod 600 /root/.ssh/id_rsa

# Set up the docker entrypoint script
COPY ./docker-entrypoint.sh /usr/local/bin

USER r0

ENV TERM=xterm-256color
ENV LANG=C.UTF-8
ENV CHARSET=UTF-8
ENV LC_COLLATE=C

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["/bin/bash"]
